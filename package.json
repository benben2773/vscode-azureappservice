{
    "name": "vscode-azureappservice",
    "displayName": "Azure App Service",
    "description": "An Azure App Service management extension for Visual Studio Code.",
    "version": "0.16.6-alpha",
    "publisher": "ms-azuretools",
    "": "resources/WebApp.png",
    "aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
    "engines": {
        "vscode": "^1.31.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/Microsoft/vscode-azureappservice"
    },
    "galleryBanner": {
        "color": "#3a3d41",
        "theme": "dark"
    },
    "homepage": "https://github.com/Microsoft/vscode-azureappservice/blob/master/README.md",
    "license": "SEE LICENSE IN LICENSE.md",
    "categories": [
        "Azure"
    ],
    "keywords": [
        "Azure",
        "App Service",
        "multi-root ready"
    ],
    "preview": true,
    "activationEvents": [
        "onCommand:appService.CreateTrialApp",
        "onCommand:appService.CreateWebApp",
        "onCommand:appService.CreateWebAppAdvanced",
        "onCommand:appService.Refresh",
        "onCommand:appService.LoadMore",
        "onCommand:appService.OpenInPortal",
        "onCommand:appService.Browse",
        "onCommand:appService.Start",
        "onCommand:appService.Stop",
        "onCommand:appService.Restart",
        "onCommand:appService.Delete",
        "onCommand:appService.DeleteTrialApp",
        "onCommand:appService.ExtendTrialApp",
        "onCommand:appService.Deploy",
        "onCommand:appService.ConfigureDeploymentSource",
        "onCommand:appService.DeploymentScript",
        "onCommand:appService.SwapSlots",
        "onCommand:appService.appSettings.Add",
        "onCommand:appService.appSettings.Edit",
        "onCommand:appService.appSettings.Rename",
        "onCommand:appService.appSettings.Delete",
        "onCommand:appService.appSettings.Download",
        "onCommand:appService.appSettings.Upload",
        "onCommand:appService.appSettings.ToggleSlotSetting",
        "onCommand:appService.startStreamingLogs",
        "onCommand:appService.StopLogStream",
        "onCommand:appService.StartRemoteDebug",
        "onCommand:appService.StartSsh",
        "onCommand:appService.CreateSlot",
        "onCommand:appService.DeploySlot",
        "onCommand:appService.EnableFileLogging",
        "onCommand:appService.viewDeploymentLogs",
        "onCommand:appService.Redeploy",
        "onCommand:appService.ViewCommitInGitHub",
        "onCommand:appService.DisconnectRepo",
        "onCommand:appService.connectToGitHub",
        "onCommand:appService.AddCosmosDBConnection",
        "onCommand:appService.RemoveCosmosDBConnection",
        "onCommand:appService.RevealConnection",
        "onCommand:appService.RevealConnectionInAppSettings",
        "onView:azureAppService"
    ],
    "main": "./main.js",
    "contributes": {
        "commands": [
            {
                "command": "appService.CreateTrialApp",
                "title": "Create New Trial App...",
                "category": "Azure App Service",
                "icon": {
                    "light": "resources/light/createAppSvc.svg",
                    "dark": "resources/dark/createAppSvc.svg"
                }
            },
            {
                "command": "appService.selectSubscriptions",
                "title": "Select Subscriptions...",
                "icon": {
                    "light": "resources/light/filter.svg",
                    "dark": "resources/dark/filter.svg"
                }
            },
            {
                "command": "appService.CreateWebApp",
                "title": "Create New Web App...",
                "category": "Azure App Service",
                "icon": {
                    "light": "resources/light/createAppSvc.svg",
                    "dark": "resources/dark/createAppSvc.svg"
                }
            },
            {
                "command": "appService.CreateWebAppAdvanced",
                "title": "Create New Web App... (Advanced)",
                "category": "Azure App Service"
            },
            {
                "command": "appService.Deploy",
                "title": "Deploy to Web App...",
                "category": "Azure App Service",
                "icon": {
                    "light": "resources/light/Deploy.svg",
                    "dark": "resources/dark/Deploy.svg"
                }
            },
            {
                "command": "appService.Refresh",
                "title": "Refresh",
                "category": "Azure App Service",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "appService.LoadMore",
                "title": "Load More",
                "category": "Azure App Service"
            },
            {
                "command": "appService.OpenInPortal",
                "title": "Open in Portal",
                "category": "Azure App Service"
            },
            {
                "command": "appService.Browse",
                "title": "Browse Website",
                "category": "Azure App Service"
            },
            {
                "command": "appService.Start",
                "title": "Start",
                "category": "Azure App Service"
            },
            {
                "command": "appService.Stop",
                "title": "Stop",
                "category": "Azure App Service"
            },
            {
                "command": "appService.Restart",
                "title": "Restart",
                "category": "Azure App Service"
            },
            {
                "command": "appService.Delete",
                "title": "Delete...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.DeleteTrialApp",
                "title": "Delete Trial App...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.ExtendTrialApp",
                "title": "Extend Trial to 24 hours",
                "category": "Azure App Service"
            },
            {
                "command": "appService.DeploymentScript",
                "title": "Generate Azure CLI Script",
                "category": "Azure App Service"
            },
            {
                "command": "appService.ConfigureDeploymentSource",
                "title": "Configure Deployment Source...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.SwapSlots",
                "title": "Swap Deployment Slot...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.appSettings.Add",
                "title": "Add New Setting...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.appSettings.Edit",
                "title": "Edit...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.appSettings.Rename",
                "title": "Rename...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.appSettings.Delete",
                "title": "Delete...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.appSettings.Download",
                "title": "Download Remote Settings...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.appSettings.Upload",
                "title": "Upload Local Settings...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.appSettings.ToggleSlotSetting",
                "title": "Toggle as Slot Setting",
                "category": "Azure App Service"
            },
            {
                "command": "appService.startStreamingLogs",
                "title": "Start Streaming Logs",
                "category": "Azure App Service"
            },
            {
                "command": "appService.StopLogStream",
                "title": "Stop Streaming Logs",
                "category": "Azure App Service"
            },
            {
                "command": "appService.CreateSlot",
                "title": "Create New Deployment Slot...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.DeploySlot",
                "title": "Deploy to Slot...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.StartRemoteDebug",
                "title": "Start Remote Debugging",
                "category": "Azure App Service"
            },
            {
                "command": "appService.StartSsh",
                "title": "SSH into Web App",
                "category": "Azure App Service"
            },
            {
                "command": "appService.ScaleUp",
                "title": "Scale up App Service Plan...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.EnableFileLogging",
                "title": "Enable File Logging",
                "category": "Azure App Service"
            },
            {
                "command": "appService.InstallCosmosDBExtension",
                "title": "Install Cosmos DB Extension",
                "category": "Azure App Service"
            },
            {
                "command": "appService.RevealConnection",
                "title": "Reveal in Cosmos DB Extension",
                "category": "Azure App Service"
            },
            {
                "command": "appService.AddCosmosDBConnection",
                "title": "Add New Connection...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.RemoveCosmosDBConnection",
                "title": "Remove Connection...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.Redeploy",
                "title": "Redeploy",
                "category": "Azure App Service"
            },
            {
                "command": "appService.viewDeploymentLogs",
                "title": "View Deployment Logs",
                "category": "Azure App Service"
            },
            {
                "command": "appService.ViewCommitInGitHub",
                "title": "View Commit in GitHub",
                "category": "Azure App Service"
            },
            {
                "command": "appService.connectToGitHub",
                "title": "Connect to GitHub Repository...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.DisconnectRepo",
                "title": "Disconnect from Repo...",
                "category": "Azure App Service"
            },
            {
                "command": "appService.RevealConnectionInAppSettings",
                "title": "Reveal in Application Settings",
                "category": "Azure App Service"
            },
            {
                "command": "appService.toggleAppSettingVisibility",
                "title": "Toggle App Value Visibility",
                "category": "Azure App Service",
                "icon": {
                    "light": "resources/light/Visible_Visible_16x.svg",
                    "dark": "resources/dark/Visible_Visible_16x.svg"
                }
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "azure",
                    "title": "Azure",
                    "icon": "resources/azure.svg"
                }
            ]
        },
        "views": {
            "azure": [
                {
                    "id": "azureAppService",
                    "name": "App Service",
                    "when": "config.appService.showExplorer == true"
                }
            ]
        },
        "menus": {
            "commandPalette": [
                {
                    "command": "appService.selectSubscriptions",
                    "when": "never"
                },
                {
                    "command": "appService.Refresh",
                    "when": "never"
                },
                {
                    "command": "appService.LoadMore",
                    "when": "never"
                },
                {
                    "command": "appService.ScaleUp",
                    "when": "never"
                },
                {
                    "command": "appService.InstallCosmosDBExtension",
                    "when": "never"
                },
                {
                    "command": "appService.appSettings.Delete",
                    "when": "never"
                },
                {
                    "command": "appService.toggleAppSettingVisibility",
                    "when": "never"
                }
            ],
            "view/title": [
                {
                    "command": "appService.CreateWebApp",
                    "when": "view == azureAppService",
                    "group": "navigation@1"
                },
                {
                    "command": "appService.Deploy",
                    "when": "view == azureAppService",
                    "group": "navigation@2"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService",
                    "group": "navigation@3"
                }
            ],
            "view/item/context": [
                {
                    "command": "appService.ExtendTrialApp",
                    "when": "view == azureAppService && viewItem =~ /^(trialApp)$/",
                    "group": "2_appServiceControlCommands@1"
                },
                {
                    "command": "appService.DeleteTrialApp",
                    "when": "view == azureAppService && viewItem == trialApp"
                },
                {
                    "command": "appService.selectSubscriptions",
                    "when": "view == azureAppService && viewItem == azureextensionui.azureSubscription",
                    "group": "inline"
                },
                {
                    "command": "appService.CreateWebApp",
                    "when": "view == azureAppService && viewItem == azureextensionui.azureSubscription",
                    "group": "1_subscriptionGeneralCommands@1"
                },
                {
                    "command": "appService.CreateWebAppAdvanced",
                    "when": "view == azureAppService && viewItem == azureextensionui.azureSubscription",
                    "group": "1_subscriptionGeneralCommands@2"
                },
                {
                    "command": "appService.OpenInPortal",
                    "when": "view == azureAppService && viewItem == azureextensionui.azureSubscription",
                    "group": "1_subscriptionGeneralCommands@3"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == azureextensionui.azureSubscription",
                    "group": "2_subscriptionGeneralCommands@1"
                },
                {
                    "command": "appService.OpenInPortal",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "1_appServiceGeneralCommands@1"
                },
                {
                    "command": "appService.Browse",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot|trialApp)$/",
                    "group": "1_appServiceGeneralCommands@2"
                },
                {
                    "command": "appService.Start",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "2_appServiceControlCommands@1"
                },
                {
                    "command": "appService.Stop",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "2_appServiceControlCommands@2"
                },
                {
                    "command": "appService.Restart",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "2_appServiceControlCommands@3"
                },
                {
                    "command": "appService.SwapSlots",
                    "when": "view == azureAppService && viewItem == deploymentSlot",
                    "group": "2_appServiceControlCommands@4"
                },
                {
                    "command": "appService.Delete",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "2_appServiceControlCommands@5"
                },
                {
                    "command": "appService.Deploy",
                    "when": "view == azureAppService && viewItem == appService",
                    "group": "3_appServiceDeployCommands@1"
                },
                {
                    "command": "appService.DeploySlot",
                    "when": "view == azureAppService && viewItem == deploymentSlot",
                    "group": "3_appServiceDeployCommands@1"
                },
                {
                    "command": "appService.ConfigureDeploymentSource",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "3_appServiceDeployCommands@2"
                },
                {
                    "command": "appService.startStreamingLogs",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "4_appServiceDiagnosticsCommands@1"
                },
                {
                    "command": "appService.StopLogStream",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "4_appServiceDiagnosticsCommands@2"
                },
                {
                    "command": "appService.DeploymentScript",
                    "when": "view == azureAppService && viewItem == appService",
                    "group": "5_appServiceMiscCommands@1"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "7_appServiceRefreshCommands@1"
                },
                {
                    "command": "appService.StartRemoteDebug",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "5_appServiceRemoteCommands@1"
                },
                {
                    "command": "appService.StartSsh",
                    "when": "view == azureAppService && viewItem =~ /^(appService|deploymentSlot)$/",
                    "group": "5_appServiceRemoteCommands@2"
                },
                {
                    "command": "appService.CreateSlot",
                    "when": "view == azureAppService && viewItem == deploymentSlots",
                    "group": "1_deploymentSlotsGeneralCommands@1"
                },
                {
                    "command": "appService.OpenInPortal",
                    "when": "view == azureAppService && viewItem == deploymentSlots",
                    "group": "1_deploymentSlotsGeneralCommands@2"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == deploymentSlots",
                    "group": "2_deploymentSlotsGeneralCommands@1"
                },
                {
                    "command": "appService.EnableFileLogging",
                    "when": "view == azureAppService && viewItem == logFiles",
                    "group": "1_folderGeneralCommands@1"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == siteFiles",
                    "group": "1_folderGeneralCommands@2"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == folder",
                    "group": "1_subFolderRefreshCommands@1"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == logFiles",
                    "group": "2_folderGeneralCommands@1"
                },
                {
                    "command": "appService.OpenInPortal",
                    "when": "view == azureAppService && viewItem == webJobs",
                    "group": "1_webJobsGeneralCommands@1"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == webJobs",
                    "group": "2_webJobsGeneralCommands@1"
                },
                {
                    "command": "appService.appSettings.Add",
                    "when": "view == azureAppService && viewItem == applicationSettings",
                    "group": "1_appSettingsEdit@1"
                },
                {
                    "command": "appService.OpenInPortal",
                    "when": "view == azureAppService && viewItem == applicationSettings",
                    "group": "1_appSettingsEdit@2"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == applicationSettings",
                    "group": "2_appSettingsGeneral@1"
                },
                {
                    "command": "appService.appSettings.Download",
                    "when": "view == azureAppService && viewItem == applicationSettings",
                    "group": "1_appSettingEnv@1"
                },
                {
                    "command": "appService.appSettings.Upload",
                    "when": "view == azureAppService && viewItem == applicationSettings",
                    "group": "1_appSettingEnv@2"
                },
                {
                    "command": "appService.appSettings.Edit",
                    "when": "view == azureAppService && viewItem == applicationSettingItem",
                    "group": "1_appSettingItemEdit@1"
                },
                {
                    "command": "appService.appSettings.Rename",
                    "when": "view == azureAppService && viewItem == applicationSettingItem",
                    "group": "1_appSettingItemEdit@2"
                },
                {
                    "command": "appService.appSettings.Delete",
                    "when": "view == azureAppService && viewItem == applicationSettingItem",
                    "group": "1_appSettingItemEdit@3"
                },
                {
                    "command": "appService.appSettings.ToggleSlotSetting",
                    "when": "view == azureAppService && viewItem == applicationSettingItem",
                    "group": "1_appSettingItemEdit@4"
                },
                {
                    "command": "appService.toggleAppSettingVisibility",
                    "when": "view == azureAppService && viewItem == applicationSettingItem",
                    "group": "inline"
                },
                {
                    "command": "appService.ScaleUp",
                    "when": "view == azureAppService && viewItem == deploymentNASlots"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == connections",
                    "group": "1@1"
                },
                {
                    "command": "appService.AddCosmosDBConnection",
                    "when": "view == azureAppService && viewItem == сosmosDBConnections",
                    "group": "1@1"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem == сosmosDBConnections",
                    "group": "2@2"
                },
                {
                    "command": "appService.RevealConnection",
                    "when": "view == azureAppService && viewItem == cosmosDBConnection",
                    "group": "1@1"
                },
                {
                    "command": "appService.RevealConnectionInAppSettings",
                    "when": "view == azureAppService && viewItem == cosmosDBConnection",
                    "group": "1@2"
                },
                {
                    "command": "appService.RemoveCosmosDBConnection",
                    "when": "view == azureAppService && viewItem == cosmosDBConnection",
                    "group": "2@1"
                },
                {
                    "command": "appService.OpenInPortal",
                    "when": "view == azureAppService && viewItem =~ /^deployments(C|Unc)onnected$/",
                    "group": "1@1"
                },
                {
                    "command": "appService.ConfigureDeploymentSource",
                    "when": "view == azureAppService && viewItem =~ /^deployments(C|Unc)onnected$/",
                    "group": "1@2"
                },
                {
                    "command": "appService.DisconnectRepo",
                    "when": "view == azureAppService && viewItem == deploymentsConnected",
                    "group": "1@3"
                },
                {
                    "command": "appService.Refresh",
                    "when": "view == azureAppService && viewItem =~ /^deployments(C|Unc)onnected$/",
                    "group": "2@1"
                },
                {
                    "command": "appService.viewDeploymentLogs",
                    "when": "view == azureAppService && viewItem =~ /deployment//",
                    "group": "1@1"
                },
                {
                    "command": "appService.Redeploy",
                    "when": "view == azureAppService && viewItem =~ /deployment//",
                    "group": "1@2"
                },
                {
                    "command": "appService.ViewCommitInGitHub",
                    "when": "view == azureAppService && viewItem == deployment/github",
                    "group": "1@3"
                },
                {
                    "command": "appService.OpenInPortal",
                    "when": "view == azureAppService && viewItem =~ /deployment//",
                    "group": "1@4"
                }
            ],
            "explorer/context": [
                {
                    "command": "appService.Deploy",
                    "when": "explorerResourceIsFolder == true",
                    "group": "zzz_azuretools_deploy@1"
                },
                {
                    "command": "appService.Deploy",
                    "when": "explorerResourceIsFolder == false && resourceExtname =~ /.[j|w]ar$/",
                    "group": "zzz_azuretools_deploy@1"
                },
                {
                    "command": "appService.appSettings.Upload",
                    "when": "resourceFilename == .env",
                    "group": "zzz_azuretools_appsettings@1"
                }
            ]
        },
        "keybindings": [
            {
                "command": "workbench.view.extension.azure",
                "key": "ctrl+shift+a",
                "mac": "cmd+shift+a"
            }
        ],
        "configuration": {
            "title": "Azure App Service",
            "properties": {
                "appService.showExplorer": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show or hide the App Service Explorer"
                },
                "appService.zipGlobPattern": {
                    "scope": "resource",
                    "type": "string",
                    "default": "**/*",
                    "description": "Defines which files in the workspace to deploy. This applies to Zip deploy only, has no effect on other deployment methods."
                },
                "appService.zipIgnorePattern": {
                    "scope": "resource",
                    "type": [
                        "string",
                        "array"
                    ],
                    "default": [],
                    "description": "Defines which files in the workspace to ignore for Zip deploy. This applies to Zip deploy only, has no effect on other deployment methods."
                },
                "appService.showSavePrompt": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show warning dialog on remote file uploading."
                },
                "appService.showBuildDuringDeployPrompt": {
                    "scope": "resource",
                    "type": "boolean",
                    "default": true,
                    "description": "Show prompt to improve performance of Zip Deploy by excluding build artifacts from the zip file and running a build during deployment."
                },
                "appService.deploySubpath": {
                    "scope": "resource",
                    "type": "string",
                    "description": "The default subpath of a workspace folder to use when deploying."
                },
                "appService.defaultWebAppToDeploy": {
                    "scope": "resource",
                    "type": "string",
                    "description": "The default web app to use when deploying represented by its full Azure id.  Every subsequent deployment of this workspace will deploy to this web app or slot. Can be disabled by setting to \"None\""
                },
                "appService.connections": {
                    "type": "array",
                    "description": "Array of web apps with its connections",
                    "required": [
                        "webAppId"
                    ],
                    "items": {
                        "type": "object",
                        "description": "Connections of specific web app.",
                        "additionalProperties": false,
                        "properties": {
                            "webAppId": {
                                "type": "string",
                                "description": "Web app id."
                            },
                            "cosmosDB": {
                                "type": "array",
                                "description": "Array of Cosmos DB database ids.",
                                "items": {
                                    "type": "string",
                                    "description": "Connection id"
                                }
                            }
                        }
                    }
                },
                "appService.showPreDeployWarning": {
                    "scope": "resource",
                    "type": "boolean",
                    "description": "Shows warning that project is not configured for VS Code deployments",
                    "default": true
                },
                "appService.preDeployTask": {
                    "scope": "resource",
                    "type": "string",
                    "description": "The name of the task to run before deploying."
                },
                "appService.postDeployTask": {
                    "scope": "resource",
                    "type": "string",
                    "description": "%appService.postDeployTask%"
                },
                "appService.showPlanPerformanceWarning": {
                    "type": "boolean",
                    "default": true,
                    "description": "Shows a warning that performance may drop when creating an app in an App Service Plan that has more than 3 web apps associated to it"
                },
                "appService.showDeploySubpathWarning": {
                    "type": "boolean",
                    "description": "Show a warning when the \"deploySubpath\" setting does not match the selected folder for deploying.",
                    "default": true
                },
                "appService.enableOutputTimestamps": {
                    "type": "boolean",
                    "description": "Prepends each line displayed in the Azure App Service output channel with a timestamp",
                    "default": true
                },
                "appService.enablePythonRemoteDebugging": {
                    "type": "boolean",
                    "description": "Enable remote debugging for Python web apps (experimental)",
                    "default": false
                },
                "appService.showDeployConfirmation": {
                    "type": "boolean",
                    "description": "Ask for confirmation before deploying to Azure App Service (deploying will overwrite any previous deployment and cannot be undone).",
                    "default": true
                }
            }
        },
        "breakpoints": [
            {
                "language": "javascript"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run webpack-prod",
        "build": "tsc",
        "compile": "tsc -watch",
        "package": "vsce package",
        "lint": "tslint --project tsconfig.json -t verbose",
        "lint-fix": "tslint --project tsconfig.json -t verbose --fix",
        "pretest": "npm run webpack-prod && gulp preTest",
        "test": "node ./out/test/runTest.js",
        "webpack": "npm run build && gulp webpack-dev",
        "webpack-prod": "npm run build && gulp webpack-prod",
        "webpack-profile": "webpack --profile --json --mode production > webpack-stats.json && echo Use http://webpack.github.io/analyse to analyze the stats",
        "all": "npm i && npm run lint && npm test"
    },
    "devDependencies": {
        "@types/dotenv": "^6.1.1",
        "@types/fs-extra": "^8.0.0",
        "@types/gulp": "^4.0.6",
        "@types/mocha": "^7.0.2",
        "@types/node": "^10.0.0",
        "@types/request-promise": "4.1.41",
        "@types/vscode": "1.31.0",
        "glob": "^7.1.6",
        "gulp": "^4.0.2",
        "mocha": "^7.1.1",
        "mocha-junit-reporter": "^1.23.3",
        "mocha-multi-reporters": "^1.1.7",
        "ts-node": "^7.0.1",
        "tslint": "^5.20.1",
        "tslint-microsoft-contrib": "5.0.1",
        "typescript": "^3.8.3",
        "vsce": "^1.71.0",
        "vscode-azureextensiondev": "^0.3.3",
        "vscode-test": "^1.3.0",
        "webpack": "^4.41.5",
        "webpack-cli": "^3.3.10"
    },
    "dependencies": {
        "azure-arm-resource": "^3.0.0-preview",
        "azure-arm-website": "^5.3.0",
        "dotenv": "^6.2.0",
        "fs-extra": "^8.0.0",
        "moment": "^2.24.0",
        "portfinder": "^1.0.25",
        "request-promise": "^4.2.5",
        "vscode-azureappservice": "^0.58.0",
        "vscode-azureextensionui": "^0.31.1",
        "vscode-azurekudu": "^0.1.8",
        "vscode-nls": "^4.1.1"
    },
    "extensionDependencies": [
        "ms-vscode.azure-account"
    ]
}
